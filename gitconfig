[user]
	name = Stuart Hendren
	email = stuart@committed.io
	signingkey = FDF9097005963847

[color]
	branch = auto
	diff = auto
	status = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[alias]
  # List alias commands
  la = "!git config -l | grep alias | cut -c 7-"
  list-alias = "!git la"
  # List commits in increasing detail
  l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  lll = log -u
  # Most common diffs
  diffc = diff --cached HEAD^
  diffw = diff --color --word-diff

  # Committing
  c = commit
  # Commit with message
  cm = "!cim() { git commit -m \"$1\"; }; cim"
  # Ammend last commit
  ca = commit --amend --no-edit
  # Mark for fixup
  cf = commit --fixup

  # Make new branch (or set branch to current commit)
  mb = checkout -B
  # Check out particular file ($2) form branch ($1)
  cof = "!cb() { git checkout $1 -- $2; }; cb"

  # Reset
  re = reset
  # Soft reset one commit
  re1 = reset HEAD^
  # Hard reset
  reh = reset --hard
  # Hard reset and clean
  rec = !git reh && git clean -fd

  # Gerrit
  review = "!review() { git push origin HEAD:refs/for/$1; }; review"
  draft = "!draft() { git push origin HEAD:refs/drafts/$1; }; draft"

  # Rebase
  r = rebase
  # Rebase interactively from $1 number of commits back
  ri = "!ri() { git rebase -i HEAD~$1; }; ri"
  ra = rebase --abort
  rc = rebase --continue
  rf = rebase -i --autosquash

  # Staging
  # Numbered modifications
  st = "!git status -s | cat -n"
  # Add number of file to stage
  s = "!stage() { git add `git st | sed -n $1p | awk -F' ' '{ print $3 }'`; git st; }; stage"
  # Add number of file to unstage
  u = "!unstage() { git reset HEAD `git st | sed -n $1p | awk -F' ' '{ print $3 }'`; git st; }; unstage"
  ## Stage all changes
  sa = !git add -u && git add . && git st
  aa = !git sa
  rmall = "!git status -s | grep '^ D' | awk -F' ' '{ print $2 }' | xargs git rm"

  # Search
  grep = grep -Ii

  # Search for files
  f = "!git ls-files | grep --color -i"


  # How many commits per author
  who = shortlog -n -s --no-merges

  # Add executable to file
  addx = update-index --chmod=+x

  # Misstype
  k = !gitk
  ui = gui

  # Abbreviations
  br = branch
  cp = cherry-pick
  co = checkout
  mt = mergetool

  # gui = !sh -c '/usr/local/git/libexec/git-core/git-gui'
  gui = !bash -c 'NPM_TOKEN=test GITHUB_TOKEN=TEST github'

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[core]
	excludesfile = ~/.gitignore_global
	editor = code --wait

#tools
[merge]
 tool = vscode
[mergetool "vscode"]
 cmd = code --wait $MERGED
[diff]
 tool = vscode
[difftool "vscode"]
 cmd = code --wait --diff $LOCAL $REMOTE 

[push]
	default = matching
	followTags = true
[commit]
	gpgsign = true
[use]
	signingkey = FDF9097005963847
[init]
	defaultBranch = main
